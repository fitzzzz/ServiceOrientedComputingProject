//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace clientConsole.VelibService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VelibStation", Namespace="http://schemas.datacontract.org/2004/07/VelibSoapService")]
    [System.SerializableAttribute()]
    public partial class VelibStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int availableBikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberOfPointAttacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberOfPointAttacheAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private clientConsole.VelibService.Position positionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int stationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int availableBikes {
            get {
                return this.availableBikesField;
            }
            set {
                if ((this.availableBikesField.Equals(value) != true)) {
                    this.availableBikesField = value;
                    this.RaisePropertyChanged("availableBikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool banking {
            get {
                return this.bankingField;
            }
            set {
                if ((this.bankingField.Equals(value) != true)) {
                    this.bankingField = value;
                    this.RaisePropertyChanged("banking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numberOfPointAttache {
            get {
                return this.numberOfPointAttacheField;
            }
            set {
                if ((this.numberOfPointAttacheField.Equals(value) != true)) {
                    this.numberOfPointAttacheField = value;
                    this.RaisePropertyChanged("numberOfPointAttache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numberOfPointAttacheAvailable {
            get {
                return this.numberOfPointAttacheAvailableField;
            }
            set {
                if ((this.numberOfPointAttacheAvailableField.Equals(value) != true)) {
                    this.numberOfPointAttacheAvailableField = value;
                    this.RaisePropertyChanged("numberOfPointAttacheAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public clientConsole.VelibService.Position position {
            get {
                return this.positionField;
            }
            set {
                if ((object.ReferenceEquals(this.positionField, value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stationName {
            get {
                return this.stationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.stationNameField, value) != true)) {
                    this.stationNameField = value;
                    this.RaisePropertyChanged("stationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int stationNumber {
            get {
                return this.stationNumberField;
            }
            set {
                if ((this.stationNumberField.Equals(value) != true)) {
                    this.stationNumberField = value;
                    this.RaisePropertyChanged("stationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/VelibSoapService")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lat {
            get {
                return this.latField;
            }
            set {
                if ((this.latField.Equals(value) != true)) {
                    this.latField = value;
                    this.RaisePropertyChanged("lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lng {
            get {
                return this.lngField;
            }
            set {
                if ((this.lngField.Equals(value) != true)) {
                    this.lngField = value;
                    this.RaisePropertyChanged("lng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VelibService.IVelibService", CallbackContract=typeof(clientConsole.VelibService.IVelibServiceCallback))]
    public interface IVelibService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetStations", ReplyAction="http://tempuri.org/IVelibService/GetStationsResponse")]
        void GetStations(string cityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetStations", ReplyAction="http://tempuri.org/IVelibService/GetStationsResponse")]
        System.Threading.Tasks.Task GetStationsAsync(string cityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetStation", ReplyAction="http://tempuri.org/IVelibService/GetStationResponse")]
        void GetStation(string cityID, int stationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetStation", ReplyAction="http://tempuri.org/IVelibService/GetStationResponse")]
        System.Threading.Tasks.Task GetStationAsync(string cityID, int stationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/SubscribeGetStations", ReplyAction="http://tempuri.org/IVelibService/SubscribeGetStationsResponse")]
        void SubscribeGetStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/SubscribeGetStations", ReplyAction="http://tempuri.org/IVelibService/SubscribeGetStationsResponse")]
        System.Threading.Tasks.Task SubscribeGetStationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/SubscribeGetStation", ReplyAction="http://tempuri.org/IVelibService/SubscribeGetStationResponse")]
        void SubscribeGetStation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/SubscribeGetStation", ReplyAction="http://tempuri.org/IVelibService/SubscribeGetStationResponse")]
        System.Threading.Tasks.Task SubscribeGetStationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVelibServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IVelibService/GetStationEvent")]
        void GetStationEvent(string cityID, int stationID, clientConsole.VelibService.VelibStation result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IVelibService/GetStationsEvent")]
        void GetStationsEvent(string cityID, clientConsole.VelibService.VelibStation[] result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVelibServiceChannel : clientConsole.VelibService.IVelibService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VelibServiceClient : System.ServiceModel.DuplexClientBase<clientConsole.VelibService.IVelibService>, clientConsole.VelibService.IVelibService {
        
        public VelibServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public VelibServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public VelibServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public VelibServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public VelibServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetStations(string cityID) {
            base.Channel.GetStations(cityID);
        }
        
        public System.Threading.Tasks.Task GetStationsAsync(string cityID) {
            return base.Channel.GetStationsAsync(cityID);
        }
        
        public void GetStation(string cityID, int stationID) {
            base.Channel.GetStation(cityID, stationID);
        }
        
        public System.Threading.Tasks.Task GetStationAsync(string cityID, int stationID) {
            return base.Channel.GetStationAsync(cityID, stationID);
        }
        
        public void SubscribeGetStations() {
            base.Channel.SubscribeGetStations();
        }
        
        public System.Threading.Tasks.Task SubscribeGetStationsAsync() {
            return base.Channel.SubscribeGetStationsAsync();
        }
        
        public void SubscribeGetStation() {
            base.Channel.SubscribeGetStation();
        }
        
        public System.Threading.Tasks.Task SubscribeGetStationAsync() {
            return base.Channel.SubscribeGetStationAsync();
        }
    }
}
